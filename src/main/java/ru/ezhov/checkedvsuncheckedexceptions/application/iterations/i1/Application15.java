package ru.ezhov.checkedvsuncheckedexceptions.application.iterations.i1;

import java.io.IOException;

/**
 * Попробуем запустить наше приложение в разных сценариях.
 */
public class Application15 {
    public static void main(String[] args) throws IOException { // проброс ошибки до пользователя
        // отсутствующий файл.
        // Видим, что сообщение не изменилось и в лог ничего не записалось, такое поведение нам и нужно
//        Application14.main(new String[]{"1.csv"});

        // отсутствует возраст 'Error when get employees. Please contact the developers. Age must be a number. Incorrect value '''.
        // Для других исключений мы выводим понятный пользователю текст
//        Application14.main(new String[]{"employees-bad-empty-age.csv"});
    }

    /**
     * Что мы имеем на данный момент:
     * 1. Вывод ответа не изменился
     * 2. Из-за особенностей lambda выражений, пришлось "костылить" обработку исключений, кидать непроверяемое и конвертировать его в наше проверяемое
     *
     * Выглядит так, что непроверяемое исключение приносит больше проблем, в данном кейсе.
     * Но не стоит забывать, развитие приложения не стоит на месте!
     *
     * Бизнес пришёл и сказал, что теперь, нужно брать информацию из базы данных, а не из файла.
     * И для начала, мы откорректируем код, в котором использовали непроверяемые исключения.
     *
     * @see Application16
     */
}

